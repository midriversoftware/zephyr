/*
 * 
 *
 * 
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

/ {
	model = "Delphian nrf52840";
	compatible = "dephian,nrf52840";

	chosen {
		/*zephyr,console = &uart0;*/
		/*zephyr,shell-uart = &uart0;*/
		zephyr,uart-mcumgr = &uart0;
		zephyr,bt-mon-uart = &uart0;
		zephyr,bt-c2h-uart = &uart0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
		zephyr,eeprom = &eeprom0;
	};

	leds {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;
			label = "Blue LED 0";
		};
		led1: led_1 {
			gpios = <&gpio0 28 GPIO_ACTIVE_LOW>;
			label = "Yellow LED 1";
		};
		led2: led_2 {
			gpios = <&gpio0 03 GPIO_ACTIVE_LOW>;
			label = "Red LED 2";
		};
/*
*		led3: led_3 {
*			gpios = <&gpio0 16 GPIO_ACTIVE_LOW>;
*			label = "Green LED 3";
*		}; 
*/
	};

/*
*	pwmleds {
*		compatible = "pwm-leds";
*		pwm_led0: pwm_led_0 {
*			pwms = <&pwm0 13>;
*		};
*	};
*/

/*
*	buttons {
*		compatible = "gpio-keys";
*		button0: button_0 {
*			gpios = <&gpio0 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
*			label = "Push button switch 0";
*		};
*		button1: button_1 {
*			gpios = <&gpio0 12 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
*			label = "Push button switch 1";
*		};
*		button2: button_2 {
*			gpios = <&gpio0 24 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
*			label = "Push button switch 2";
*		};
*		button3: button_3 {
*			gpios = <&gpio0 25 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
*			label = "Push button switch 3";
*		};
*	};
*/

/*
*	arduino_header: connector {
*		compatible = "arduino-header-r3";
*		#gpio-cells = <2>;
*		gpio-map-mask = <0xffffffff 0xffffffc0>;
*		gpio-map-pass-thru = <0 0x3f>;
*		gpio-map = <0 0 &gpio0 3 0>,
*			   <1 0 &gpio0 4 0>,	
*			   <2 0 &gpio0 28 0>,	
*			   <3 0 &gpio0 29 0>,	
*			   <4 0 &gpio0 30 0>,	
*			   <5 0 &gpio0 31 0>,	
*			   <6 0 &gpio1 1 0>,	
*			   <7 0 &gpio1 2 0>,	
*			   <8 0 &gpio1 3 0>,	
*			   <9 0 &gpio1 4 0>,	
*			   <10 0 &gpio1 5 0>,	
*			   <11 0 &gpio1 6 0>,	
*			   <12 0 &gpio1 7 0>,	
*			   <13 0 &gpio1 8 0>,	
*			   <14 0 &gpio1 10 0>,	
*			   <15 0 &gpio1 11 0>,	
*			   <16 0 &gpio1 12 0>,	
*			   <17 0 &gpio1 13 0>,	
*			   <18 0 &gpio1 14 0>,	
*			   <19 0 &gpio1 15 0>,	
*			   <20 0 &gpio0 26 0>,	
*			   <21 0 &gpio0 27 0>;	
*	};
*/

/*
*	arduino_adc: analog-connector {
*		compatible = "arduino,uno-adc";
*		#io-channel-cells = <1>;
*		io-channel-map = <0 &adc 1>,
*				 <1 &adc 2>,	
*				 <2 &adc 4>,	
*				 <3 &adc 5>,	
*				 <4 &adc 6>,	
*				 <5 &adc 7>;	
*	};
*/

	/* These aliases are provided for compatibility with samples */
	aliases {
		led0 = &led0;
		led1 = &led1;
		led2 = &led2;
		/*led3 = &led3;*/
		/*pwm-led0 = &pwm_led0;*/
		/*sw0 = &button0;*/
		/*sw1 = &button1;*/
		/*sw2 = &button2;*/
		/*sw3 = &button3;*/
		bootloader-led0 = &led0;
	};
};

/*
*&adc {
*	status = "okay";
*};
*
*&gpiote {
*	status = "okay";
*};
*
*&gpio0 {
*	status = "okay";
*};
*
*&gpio1 {
*	status = "okay";
*};
*/

&uart0 {
	compatible = "nordic,nrf-uarte";
	status = "okay";
	current-speed = <115200>;
	tx-pin = <6>;
	rx-pin = <8>;
	rts-pin = <5>;
	cts-pin = <7>;
};

arduino_serial: &uart1 {
	status = "okay";
	current-speed = <115200>;
	rx-pin = <24>;	/* pin 24= P0.24  */
	tx-pin = <12>;	/* pin 12= P0.12  */
};

arduino_i2c: &i2c0 {
	compatible = "nordic,nrf-twi";
	status = "okay";
	sda-gpios = <&gpio0 26 0>;
	scl-gpios = <&gpio0 27 0>;
	eeprom0: eeprom@a0 {
		compatible = "microchip,24aa64";
		reg = <0xA0>;
		label = "EEPROM_0";
		size = <1024>;
		pagesize = <16>;
		address-width = <8>;
		timeout = <5>;
		status = "okay";
	};
};

/*
*&pwm0 {
*	status = "okay";
*	ch0-pin = <13>;
*	ch0-inverted;
*};
*
*&spi0 {
*	compatible = "nordic,nrf-spi";
*	sck-pin = <27>;
*	mosi-pin = <26>;
*	miso-pin = <29>;
*};
*
*&spi1 {
*	compatible = "nordic,nrf-spi";
*	status = "okay";
*	sck-pin = <31>;
*	mosi-pin = <30>;
*	miso-pin = <40>;
*};
*
*&spi2 {
*	compatible = "nordic,nrf-spi";
*	status = "disabled";
*	sck-pin = <19>;
*	mosi-pin = <20>;
*	miso-pin = <21>;
*};
*/
&qspi {
	status = "okay";
	sck-pin = <19>;
	io-pins = <20>, <21>, <22>, <23>;
	csn-pins = <17>;
	mx25r64: mx25r6435f@0 {
		compatible = "nordic,qspi-nor";
		reg = <0>;
		/* MX24R64 supports only pp and pp4io */
		writeoc = "pp4io";
		/* MX24R64 supports all readoc options */
		readoc = "read4io";
		sck-frequency = <8000000>;
		label = "MX25R64";
		jedec-id = [c2 28 17];
		sfdp-bfp = [
			e5 20 f1 ff  ff ff ff 03  44 eb 08 6b  08 3b 04 bb
			ee ff ff ff  ff ff 00 ff  ff ff 00 ff  0c 20 0f 52
			10 d8 00 ff  23 72 f5 00  82 ed 04 cc  44 83 68 44
			30 b0 30 b0  f7 c4 d5 5c  00 be 29 ff  f0 d0 ff ff
		];
		size = <67108864>;
		has-dpd;
		t-enter-dpd = <10000>;
		t-exit-dpd = <35000>;
	};
};

/*
*rduino_spi: &spi3 {
*	status = "okay";
*	sck-pin = <47>;
*	miso-pin = <46>;
*	mosi-pin = <45>;
*	cs-gpios = <&arduino_header 16 GPIO_ACTIVE_LOW>;
*;
*/

&flash0 {

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x000000000 0x0000C000>;
		};
		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0x0000C000 0x00067000>;
		};
		slot1_partition: partition@73000 {
			label = "image-1";
			reg = <0x00073000 0x00067000>;
		};
		scratch_partition: partition@da000 {
			label = "image-scratch";
			reg = <0x000da000 0x0001e000>;
		};

		/*
		 * The flash starting at 0x000f8000 and ending at
		 * 0x000fffff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@f8000 {
			label = "storage";
			reg = <0x000f8000 0x00008000>;
		};
	};
};

&usbd {
	compatible = "nordic,nrf-usbd";
	status = "okay";
};
